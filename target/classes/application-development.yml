# FRC Project Management System - Development Profile Configuration
# Version 2.0.0 - Spring Boot Migration
#
# This configuration overrides default settings for local development,
# providing enhanced debugging, faster iteration, and development tools
# while preserving the existing H2 database setup from the JavaFX version.

spring:
  # DataSource Configuration (Supabase PostgreSQL for development with sample data)
  datasource:
    url: jdbc:postgresql://aws-0-us-east-2.pooler.supabase.com:6543/postgres
    username: postgres.pskzshlscnicatyqthtk
    password: ${SUPABASE_PASSWORD:ShrapnelSergeants2408!}
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 20000
      maximum-pool-size: 10
      minimum-idle: 2
      idle-timeout: 300000
      max-lifetime: 1200000
      leak-detection-threshold: 60000
    
  # JPA Configuration (PostgreSQL optimized)
  jpa:
    hibernate:
      ddl-auto: update  # Update schema without dropping existing data
    show-sql: true           # Show SQL queries for debugging
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true     # Pretty-print SQL queries
        use_sql_comments: true
        jdbc:
          batch_size: 20     # PostgreSQL handles batching well
        order_inserts: true
        order_updates: true
        generate_statistics: true
        
  # H2 Console (disabled - using PostgreSQL)
  h2:
    console:
      enabled: false
        
  # Thymeleaf (development optimizations)
  thymeleaf:
    cache: false            # Disable template caching for live reload
    prefix: classpath:/templates/
    suffix: .html
    mode: HTML
    encoding: UTF-8
    servlet:
      content-type: text/html;charset=UTF-8
      
  # Web Resources (development settings)
  web:
    resources:
      cache:
        period: 0           # Disable caching for immediate changes
      static-locations: 
        - classpath:/static/
        - file:src/main/resources/static/  # Direct file access for live editing
        
  # DevTools Configuration
  devtools:
    restart:
      enabled: true
      additional-paths: src/main/java
      exclude: static/**,templates/**
    livereload:
      enabled: false
      port: 35729
    add-properties: true

# Server Configuration (development)
server:
  port: 8080
  servlet:
    session:
      cookie:
        secure: false      # Allow non-HTTPS for local development
        same-site: lax
  error:
    include-stacktrace: always  # Full stack traces for debugging
    include-exception: true
    include-message: always
    include-binding-errors: always

# Enhanced Logging for Development
logging:
  level:
    org.frcpm: INFO                     # Application logging
    org.springframework.web: WARN       # Web request logging
    org.springframework.security: WARN  # Security debugging
    org.hibernate.SQL: WARN            # SQL query logging
    org.hibernate.type.descriptor.sql.BasicBinder: WARN  # Parameter binding
    org.springframework.transaction: WARN  # Transaction debugging
    org.springframework.data.jpa: WARN     # JPA debugging
    de.saxsys.mvvmfx: WARN              # MVVMFx framework (if still present)
  pattern:
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/frc-project-dev.log

# Development-specific Application Properties
app:
  # Development team settings
  team:
    default-name: "Development Team"
    default-number: 9999
    
  # Relaxed development settings
  project:
    max-active-projects: 10  # Higher limit for testing
    
  task:
    max-dependencies: 20     # Higher limit for complex testing scenarios
    
  # Development file upload settings
  upload:
    max-file-size: 50MB      # Larger files for testing
    temp-directory: ./temp/uploads
    
  # Development export settings
  export:
    output-directory: ./exports
    
  # Development chart settings
  charts:
    default-chart-height: 300  # Smaller for development screens
    debug-mode: true
    
# Development Security (relaxed settings)
spring.security:
  user:
    name: dev
    password: dev
    roles: ADMIN,DEVELOPER
    
# Development Database Initialization (using Java-based loader instead of SQL)
spring.sql.init:
  mode: never

# Development Actuator (more endpoints exposed)
management:
  endpoints:
    web:
      exposure:
        include: "*"  # All endpoints for development monitoring
      cors:
        allowed-origins: "*"
        allowed-methods: GET,POST
  endpoint:
    health:
      show-details: always
    shutdown:
      enabled: true  # Allow graceful shutdown in development

# Development-specific Info
info:
  environment: development
  database:
    type: PostgreSQL
    url: "jdbc:postgresql://aws-0-us-east-2.pooler.supabase.com:6543/postgres"
    location: "aws-0-us-east-2.pooler.supabase.com:6543"
  endpoints:
    application: "http://localhost:8080"
    actuator: "http://localhost:8080/actuator"
  development:
    features:
      - "PostgreSQL Development Database"
      - "Live Template Reload"
      - "Enhanced SQL Logging"
      - "Full Stack Traces"
      - "All Actuator Endpoints"
      - "Relaxed Security"
    notes:
      - "Using PostgreSQL for better compatibility and performance"
      - "Database persists between restarts"
      - "Template and static resource caching disabled"
      - "Enhanced logging for debugging"
      - "Development credentials: dev/dev"

# TODO: Development Phase 2 Enhancements
# 
# The following development features will be added in Phase 2:
#
# 1. Hot Reload Configuration:
#    - Live service layer reload
#    - Template hot swapping
#    - CSS/JS live updates
#
# 2. Development Data:
#    - Sample FRC team data
#    - Test build season scenarios
#    - Mock competition schedules
#
# 3. Development Tools:
#    - SQL query profiling
#    - Performance monitoring
#    - Memory usage tracking
#
# 4. Integration Testing:
#    - Test database seeding
#    - Mock external services
#    - Automated browser testing setup