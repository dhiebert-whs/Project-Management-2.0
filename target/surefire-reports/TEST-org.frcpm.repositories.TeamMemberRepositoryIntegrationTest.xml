<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="org.frcpm.repositories.TeamMemberRepositoryIntegrationTest" time="7.178" tests="30" errors="1" skipped="0" failures="1">
  <properties>
    <property name="java.specification.version" value="21"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="C:\Users\dhiebert\Local Repositories\Project Management 2.0\target\test-classes;C:\Users\dhiebert\Local Repositories\Project Management 2.0\target\classes;C:\Users\dhiebert\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.2.0\spring-boot-starter-web-3.2.0.jar;C:\Users\dhiebert\.m2\repository\org\springframework\boot\spring-boot-starter\3.2.0\spring-boot-starter-3.2.0.jar;C:\Users\dhiebert\.m2\repository\org\springframework\boot\spring-boot\3.2.0\spring-boot-3.2.0.jar;C:\Users\dhiebert\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.2.0\spring-boot-starter-logging-3.2.0.jar;C:\Users\dhiebert\.m2\repository\ch\qos\logback\logback-classic\1.4.11\logback-classic-1.4.11.jar;C:\Users\dhiebert\.m2\repository\ch\qos\logback\logback-core\1.4.11\logback-core-1.4.11.jar;C:\Users\dhiebert\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.21.1\log4j-to-slf4j-2.21.1.jar;C:\Users\dhiebert\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\dhiebert\.m2\repository\org\slf4j\jul-to-slf4j\2.0.9\jul-to-slf4j-2.0.9.jar;C:\Users\dhiebert\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\dhiebert\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\dhiebert\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.2.0\spring-boot-starter-json-3.2.0.jar;C:\Users\dhiebert\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.15.3\jackson-datatype-jdk8-2.15.3.jar;C:\Users\dhiebert\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.15.3\jackson-datatype-jsr310-2.15.3.jar;C:\Users\dhiebert\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.15.3\jackson-module-parameter-names-2.15.3.jar;C:\Users\dhiebert\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.2.0\spring-boot-starter-tomcat-3.2.0.jar;C:\Users\dhiebert\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.16\tomcat-embed-core-10.1.16.jar;C:\Users\dhiebert\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.16\tomcat-embed-websocket-10.1.16.jar;C:\Users\dhiebert\.m2\repository\org\springframework\spring-web\6.1.1\spring-web-6.1.1.jar;C:\Users\dhiebert\.m2\repository\org\springframework\spring-beans\6.1.1\spring-beans-6.1.1.jar;C:\Users\dhiebert\.m2\repository\io\micrometer\micrometer-observation\1.12.0\micrometer-observation-1.12.0.jar;C:\Users\dhiebert\.m2\repository\io\micrometer\micrometer-commons\1.12.0\micrometer-commons-1.12.0.jar;C:\Users\dhiebert\.m2\repository\org\springframework\spring-webmvc\6.1.1\spring-webmvc-6.1.1.jar;C:\Users\dhiebert\.m2\repository\org\springframework\spring-context\6.1.1\spring-context-6.1.1.jar;C:\Users\dhiebert\.m2\repository\org\springframework\spring-expression\6.1.1\spring-expression-6.1.1.jar;C:\Users\dhiebert\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.2.0\spring-boot-starter-data-jpa-3.2.0.jar;C:\Users\dhiebert\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.2.0\spring-boot-starter-aop-3.2.0.jar;C:\Users\dhiebert\.m2\repository\org\aspectj\aspectjweaver\1.9.20.1\aspectjweaver-1.9.20.1.jar;C:\Users\dhiebert\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.2.0\spring-boot-starter-jdbc-3.2.0.jar;C:\Users\dhiebert\.m2\repository\org\springframework\spring-jdbc\6.1.1\spring-jdbc-6.1.1.jar;C:\Users\dhiebert\.m2\repository\org\hibernate\orm\hibernate-core\6.3.1.Final\hibernate-core-6.3.1.Final.jar;C:\Users\dhiebert\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\dhiebert\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\dhiebert\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\dhiebert\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\dhiebert\.m2\repository\net\bytebuddy\byte-buddy\1.14.10\byte-buddy-1.14.10.jar;C:\Users\dhiebert\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\dhiebert\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\dhiebert\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\dhiebert\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\dhiebert\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\dhiebert\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\dhiebert\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\dhiebert\.m2\repository\org\springframework\data\spring-data-jpa\3.2.0\spring-data-jpa-3.2.0.jar;C:\Users\dhiebert\.m2\repository\org\springframework\data\spring-data-commons\3.2.0\spring-data-commons-3.2.0.jar;C:\Users\dhiebert\.m2\repository\org\springframework\spring-orm\6.1.1\spring-orm-6.1.1.jar;C:\Users\dhiebert\.m2\repository\org\springframework\spring-tx\6.1.1\spring-tx-6.1.1.jar;C:\Users\dhiebert\.m2\repository\org\springframework\spring-aspects\6.1.1\spring-aspects-6.1.1.jar;C:\Users\dhiebert\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\3.2.0\spring-boot-starter-thymeleaf-3.2.0.jar;C:\Users\dhiebert\.m2\repository\org\thymeleaf\thymeleaf-spring6\3.1.2.RELEASE\thymeleaf-spring6-3.1.2.RELEASE.jar;C:\Users\dhiebert\.m2\repository\org\thymeleaf\thymeleaf\3.1.2.RELEASE\thymeleaf-3.1.2.RELEASE.jar;C:\Users\dhiebert\.m2\repository\org\attoparser\attoparser\2.0.7.RELEASE\attoparser-2.0.7.RELEASE.jar;C:\Users\dhiebert\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\dhiebert\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.2.0\spring-boot-starter-security-3.2.0.jar;C:\Users\dhiebert\.m2\repository\org\springframework\spring-aop\6.1.1\spring-aop-6.1.1.jar;C:\Users\dhiebert\.m2\repository\org\springframework\security\spring-security-config\6.2.0\spring-security-config-6.2.0.jar;C:\Users\dhiebert\.m2\repository\org\springframework\security\spring-security-core\6.2.0\spring-security-core-6.2.0.jar;C:\Users\dhiebert\.m2\repository\org\springframework\security\spring-security-crypto\6.2.0\spring-security-crypto-6.2.0.jar;C:\Users\dhiebert\.m2\repository\org\springframework\security\spring-security-web\6.2.0\spring-security-web-6.2.0.jar;C:\Users\dhiebert\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.2.0\spring-boot-starter-validation-3.2.0.jar;C:\Users\dhiebert\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.16\tomcat-embed-el-10.1.16.jar;C:\Users\dhiebert\.m2\repository\org\springframework\boot\spring-boot-starter-websocket\3.2.0\spring-boot-starter-websocket-3.2.0.jar;C:\Users\dhiebert\.m2\repository\org\springframework\spring-messaging\6.1.1\spring-messaging-6.1.1.jar;C:\Users\dhiebert\.m2\repository\org\springframework\spring-websocket\6.1.1\spring-websocket-6.1.1.jar;C:\Users\dhiebert\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;C:\Users\dhiebert\.m2\repository\org\xerial\sqlite-jdbc\3.44.1.0\sqlite-jdbc-3.44.1.0.jar;C:\Users\dhiebert\.m2\repository\org\slf4j\slf4j-api\2.0.9\slf4j-api-2.0.9.jar;C:\Users\dhiebert\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\dhiebert\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.1.Final\hibernate-validator-8.0.1.Final.jar;C:\Users\dhiebert\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\dhiebert\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\dhiebert\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\dhiebert\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.2.0\spring-boot-starter-test-3.2.0.jar;C:\Users\dhiebert\.m2\repository\org\springframework\boot\spring-boot-test\3.2.0\spring-boot-test-3.2.0.jar;C:\Users\dhiebert\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.2.0\spring-boot-test-autoconfigure-3.2.0.jar;C:\Users\dhiebert\.m2\repository\com\jayway\jsonpath\json-path\2.8.0\json-path-2.8.0.jar;C:\Users\dhiebert\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\dhiebert\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\dhiebert\.m2\repository\net\minidev\json-smart\2.5.0\json-smart-2.5.0.jar;C:\Users\dhiebert\.m2\repository\net\minidev\accessors-smart\2.5.0\accessors-smart-2.5.0.jar;C:\Users\dhiebert\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\dhiebert\.m2\repository\org\assertj\assertj-core\3.24.2\assertj-core-3.24.2.jar;C:\Users\dhiebert\.m2\repository\org\awaitility\awaitility\4.2.0\awaitility-4.2.0.jar;C:\Users\dhiebert\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\dhiebert\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.1\junit-jupiter-5.10.1.jar;C:\Users\dhiebert\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.1\junit-jupiter-api-5.10.1.jar;C:\Users\dhiebert\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\dhiebert\.m2\repository\org\junit\platform\junit-platform-commons\1.10.1\junit-platform-commons-1.10.1.jar;C:\Users\dhiebert\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\dhiebert\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.1\junit-jupiter-params-5.10.1.jar;C:\Users\dhiebert\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.1\junit-jupiter-engine-5.10.1.jar;C:\Users\dhiebert\.m2\repository\org\junit\platform\junit-platform-engine\1.10.1\junit-platform-engine-1.10.1.jar;C:\Users\dhiebert\.m2\repository\org\mockito\mockito-core\5.7.0\mockito-core-5.7.0.jar;C:\Users\dhiebert\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.10\byte-buddy-agent-1.14.10.jar;C:\Users\dhiebert\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\dhiebert\.m2\repository\org\mockito\mockito-junit-jupiter\5.7.0\mockito-junit-jupiter-5.7.0.jar;C:\Users\dhiebert\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\dhiebert\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\dhiebert\.m2\repository\org\springframework\spring-core\6.1.1\spring-core-6.1.1.jar;C:\Users\dhiebert\.m2\repository\org\springframework\spring-jcl\6.1.1\spring-jcl-6.1.1.jar;C:\Users\dhiebert\.m2\repository\org\springframework\spring-test\6.1.1\spring-test-6.1.1.jar;C:\Users\dhiebert\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\dhiebert\.m2\repository\org\springframework\boot\spring-boot-testcontainers\3.2.0\spring-boot-testcontainers-3.2.0.jar;C:\Users\dhiebert\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.2.0\spring-boot-autoconfigure-3.2.0.jar;C:\Users\dhiebert\.m2\repository\org\testcontainers\testcontainers\1.19.3\testcontainers-1.19.3.jar;C:\Users\dhiebert\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\dhiebert\.m2\repository\org\hamcrest\hamcrest-core\2.2\hamcrest-core-2.2.jar;C:\Users\dhiebert\.m2\repository\org\apache\commons\commons-compress\1.24.0\commons-compress-1.24.0.jar;C:\Users\dhiebert\.m2\repository\org\rnorth\duct-tape\duct-tape\1.0.8\duct-tape-1.0.8.jar;C:\Users\dhiebert\.m2\repository\org\jetbrains\annotations\17.0.0\annotations-17.0.0.jar;C:\Users\dhiebert\.m2\repository\com\github\docker-java\docker-java-api\3.3.4\docker-java-api-3.3.4.jar;C:\Users\dhiebert\.m2\repository\com\github\docker-java\docker-java-transport-zerodep\3.3.4\docker-java-transport-zerodep-3.3.4.jar;C:\Users\dhiebert\.m2\repository\com\github\docker-java\docker-java-transport\3.3.4\docker-java-transport-3.3.4.jar;C:\Users\dhiebert\.m2\repository\net\java\dev\jna\jna\5.13.0\jna-5.13.0.jar;C:\Users\dhiebert\.m2\repository\org\apache\pdfbox\pdfbox\2.0.27\pdfbox-2.0.27.jar;C:\Users\dhiebert\.m2\repository\org\apache\pdfbox\fontbox\2.0.27\fontbox-2.0.27.jar;C:\Users\dhiebert\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\dhiebert\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.3\jackson-databind-2.15.3.jar;C:\Users\dhiebert\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.15.3\jackson-annotations-2.15.3.jar;C:\Users\dhiebert\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.3\jackson-core-2.15.3.jar;C:\Users\dhiebert\.m2\repository\org\apache\xmlgraphics\batik-all\1.16\batik-all-1.16.jar;C:\Users\dhiebert\.m2\repository\xml-apis\xml-apis\1.4.01\xml-apis-1.4.01.jar;C:\Users\dhiebert\.m2\repository\xml-apis\xml-apis-ext\1.3.04\xml-apis-ext-1.3.04.jar;C:\Users\dhiebert\.m2\repository\org\apache\xmlgraphics\xmlgraphics-commons\2.7\xmlgraphics-commons-2.7.jar;C:\Users\dhiebert\.m2\repository\commons-io\commons-io\1.3.1\commons-io-1.3.1.jar;C:\Users\dhiebert\.m2\repository\org\jgrapht\jgrapht-core\1.5.2\jgrapht-core-1.5.2.jar;C:\Users\dhiebert\.m2\repository\org\jheaps\jheaps\0.14\jheaps-0.14.jar;C:\Users\dhiebert\.m2\repository\org\apfloat\apfloat\1.10.1\apfloat-1.10.1.jar;"/>
    <property name="LOGBACK_ROLLINGPOLICY_MAX_FILE_SIZE" value="10485760"/>
    <property name="java.vm.vendor" value="Eclipse Adoptium"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://adoptium.net/"/>
    <property name="user.timezone" value="America/Chicago"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Windows 11"/>
    <property name="java.vm.specification.version" value="21"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="US"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Eclipse Adoptium\jdk-21.0.7.6-hotspot\bin"/>
    <property name="sun.java.command" value="C:\Users\dhiebert\AppData\Local\Temp\surefire6716198026168578107\surefirebooter-20250617074719765_3.jar C:\Users\dhiebert\AppData\Local\Temp\surefire6716198026168578107 2025-06-17T07-47-19_668-jvmRun1 surefire-20250617074719765_1tmp surefire_0-20250617074719765_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="test" value="TeamMemberRepositoryIntegrationTest"/>
    <property name="surefire.test.class.path" value="C:\Users\dhiebert\Local Repositories\Project Management 2.0\target\test-classes;C:\Users\dhiebert\Local Repositories\Project Management 2.0\target\classes;C:\Users\dhiebert\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.2.0\spring-boot-starter-web-3.2.0.jar;C:\Users\dhiebert\.m2\repository\org\springframework\boot\spring-boot-starter\3.2.0\spring-boot-starter-3.2.0.jar;C:\Users\dhiebert\.m2\repository\org\springframework\boot\spring-boot\3.2.0\spring-boot-3.2.0.jar;C:\Users\dhiebert\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.2.0\spring-boot-starter-logging-3.2.0.jar;C:\Users\dhiebert\.m2\repository\ch\qos\logback\logback-classic\1.4.11\logback-classic-1.4.11.jar;C:\Users\dhiebert\.m2\repository\ch\qos\logback\logback-core\1.4.11\logback-core-1.4.11.jar;C:\Users\dhiebert\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.21.1\log4j-to-slf4j-2.21.1.jar;C:\Users\dhiebert\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\dhiebert\.m2\repository\org\slf4j\jul-to-slf4j\2.0.9\jul-to-slf4j-2.0.9.jar;C:\Users\dhiebert\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\dhiebert\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\dhiebert\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.2.0\spring-boot-starter-json-3.2.0.jar;C:\Users\dhiebert\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.15.3\jackson-datatype-jdk8-2.15.3.jar;C:\Users\dhiebert\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.15.3\jackson-datatype-jsr310-2.15.3.jar;C:\Users\dhiebert\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.15.3\jackson-module-parameter-names-2.15.3.jar;C:\Users\dhiebert\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.2.0\spring-boot-starter-tomcat-3.2.0.jar;C:\Users\dhiebert\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.16\tomcat-embed-core-10.1.16.jar;C:\Users\dhiebert\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.16\tomcat-embed-websocket-10.1.16.jar;C:\Users\dhiebert\.m2\repository\org\springframework\spring-web\6.1.1\spring-web-6.1.1.jar;C:\Users\dhiebert\.m2\repository\org\springframework\spring-beans\6.1.1\spring-beans-6.1.1.jar;C:\Users\dhiebert\.m2\repository\io\micrometer\micrometer-observation\1.12.0\micrometer-observation-1.12.0.jar;C:\Users\dhiebert\.m2\repository\io\micrometer\micrometer-commons\1.12.0\micrometer-commons-1.12.0.jar;C:\Users\dhiebert\.m2\repository\org\springframework\spring-webmvc\6.1.1\spring-webmvc-6.1.1.jar;C:\Users\dhiebert\.m2\repository\org\springframework\spring-context\6.1.1\spring-context-6.1.1.jar;C:\Users\dhiebert\.m2\repository\org\springframework\spring-expression\6.1.1\spring-expression-6.1.1.jar;C:\Users\dhiebert\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.2.0\spring-boot-starter-data-jpa-3.2.0.jar;C:\Users\dhiebert\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.2.0\spring-boot-starter-aop-3.2.0.jar;C:\Users\dhiebert\.m2\repository\org\aspectj\aspectjweaver\1.9.20.1\aspectjweaver-1.9.20.1.jar;C:\Users\dhiebert\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.2.0\spring-boot-starter-jdbc-3.2.0.jar;C:\Users\dhiebert\.m2\repository\org\springframework\spring-jdbc\6.1.1\spring-jdbc-6.1.1.jar;C:\Users\dhiebert\.m2\repository\org\hibernate\orm\hibernate-core\6.3.1.Final\hibernate-core-6.3.1.Final.jar;C:\Users\dhiebert\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\dhiebert\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\dhiebert\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\dhiebert\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\dhiebert\.m2\repository\net\bytebuddy\byte-buddy\1.14.10\byte-buddy-1.14.10.jar;C:\Users\dhiebert\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\dhiebert\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\dhiebert\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\dhiebert\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\dhiebert\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\dhiebert\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\dhiebert\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\dhiebert\.m2\repository\org\springframework\data\spring-data-jpa\3.2.0\spring-data-jpa-3.2.0.jar;C:\Users\dhiebert\.m2\repository\org\springframework\data\spring-data-commons\3.2.0\spring-data-commons-3.2.0.jar;C:\Users\dhiebert\.m2\repository\org\springframework\spring-orm\6.1.1\spring-orm-6.1.1.jar;C:\Users\dhiebert\.m2\repository\org\springframework\spring-tx\6.1.1\spring-tx-6.1.1.jar;C:\Users\dhiebert\.m2\repository\org\springframework\spring-aspects\6.1.1\spring-aspects-6.1.1.jar;C:\Users\dhiebert\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\3.2.0\spring-boot-starter-thymeleaf-3.2.0.jar;C:\Users\dhiebert\.m2\repository\org\thymeleaf\thymeleaf-spring6\3.1.2.RELEASE\thymeleaf-spring6-3.1.2.RELEASE.jar;C:\Users\dhiebert\.m2\repository\org\thymeleaf\thymeleaf\3.1.2.RELEASE\thymeleaf-3.1.2.RELEASE.jar;C:\Users\dhiebert\.m2\repository\org\attoparser\attoparser\2.0.7.RELEASE\attoparser-2.0.7.RELEASE.jar;C:\Users\dhiebert\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\dhiebert\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.2.0\spring-boot-starter-security-3.2.0.jar;C:\Users\dhiebert\.m2\repository\org\springframework\spring-aop\6.1.1\spring-aop-6.1.1.jar;C:\Users\dhiebert\.m2\repository\org\springframework\security\spring-security-config\6.2.0\spring-security-config-6.2.0.jar;C:\Users\dhiebert\.m2\repository\org\springframework\security\spring-security-core\6.2.0\spring-security-core-6.2.0.jar;C:\Users\dhiebert\.m2\repository\org\springframework\security\spring-security-crypto\6.2.0\spring-security-crypto-6.2.0.jar;C:\Users\dhiebert\.m2\repository\org\springframework\security\spring-security-web\6.2.0\spring-security-web-6.2.0.jar;C:\Users\dhiebert\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.2.0\spring-boot-starter-validation-3.2.0.jar;C:\Users\dhiebert\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.16\tomcat-embed-el-10.1.16.jar;C:\Users\dhiebert\.m2\repository\org\springframework\boot\spring-boot-starter-websocket\3.2.0\spring-boot-starter-websocket-3.2.0.jar;C:\Users\dhiebert\.m2\repository\org\springframework\spring-messaging\6.1.1\spring-messaging-6.1.1.jar;C:\Users\dhiebert\.m2\repository\org\springframework\spring-websocket\6.1.1\spring-websocket-6.1.1.jar;C:\Users\dhiebert\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;C:\Users\dhiebert\.m2\repository\org\xerial\sqlite-jdbc\3.44.1.0\sqlite-jdbc-3.44.1.0.jar;C:\Users\dhiebert\.m2\repository\org\slf4j\slf4j-api\2.0.9\slf4j-api-2.0.9.jar;C:\Users\dhiebert\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\dhiebert\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.1.Final\hibernate-validator-8.0.1.Final.jar;C:\Users\dhiebert\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\dhiebert\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\dhiebert\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\dhiebert\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.2.0\spring-boot-starter-test-3.2.0.jar;C:\Users\dhiebert\.m2\repository\org\springframework\boot\spring-boot-test\3.2.0\spring-boot-test-3.2.0.jar;C:\Users\dhiebert\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.2.0\spring-boot-test-autoconfigure-3.2.0.jar;C:\Users\dhiebert\.m2\repository\com\jayway\jsonpath\json-path\2.8.0\json-path-2.8.0.jar;C:\Users\dhiebert\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\dhiebert\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\dhiebert\.m2\repository\net\minidev\json-smart\2.5.0\json-smart-2.5.0.jar;C:\Users\dhiebert\.m2\repository\net\minidev\accessors-smart\2.5.0\accessors-smart-2.5.0.jar;C:\Users\dhiebert\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\dhiebert\.m2\repository\org\assertj\assertj-core\3.24.2\assertj-core-3.24.2.jar;C:\Users\dhiebert\.m2\repository\org\awaitility\awaitility\4.2.0\awaitility-4.2.0.jar;C:\Users\dhiebert\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\dhiebert\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.1\junit-jupiter-5.10.1.jar;C:\Users\dhiebert\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.1\junit-jupiter-api-5.10.1.jar;C:\Users\dhiebert\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\dhiebert\.m2\repository\org\junit\platform\junit-platform-commons\1.10.1\junit-platform-commons-1.10.1.jar;C:\Users\dhiebert\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\dhiebert\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.1\junit-jupiter-params-5.10.1.jar;C:\Users\dhiebert\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.1\junit-jupiter-engine-5.10.1.jar;C:\Users\dhiebert\.m2\repository\org\junit\platform\junit-platform-engine\1.10.1\junit-platform-engine-1.10.1.jar;C:\Users\dhiebert\.m2\repository\org\mockito\mockito-core\5.7.0\mockito-core-5.7.0.jar;C:\Users\dhiebert\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.10\byte-buddy-agent-1.14.10.jar;C:\Users\dhiebert\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\dhiebert\.m2\repository\org\mockito\mockito-junit-jupiter\5.7.0\mockito-junit-jupiter-5.7.0.jar;C:\Users\dhiebert\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\dhiebert\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\dhiebert\.m2\repository\org\springframework\spring-core\6.1.1\spring-core-6.1.1.jar;C:\Users\dhiebert\.m2\repository\org\springframework\spring-jcl\6.1.1\spring-jcl-6.1.1.jar;C:\Users\dhiebert\.m2\repository\org\springframework\spring-test\6.1.1\spring-test-6.1.1.jar;C:\Users\dhiebert\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\dhiebert\.m2\repository\org\springframework\boot\spring-boot-testcontainers\3.2.0\spring-boot-testcontainers-3.2.0.jar;C:\Users\dhiebert\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.2.0\spring-boot-autoconfigure-3.2.0.jar;C:\Users\dhiebert\.m2\repository\org\testcontainers\testcontainers\1.19.3\testcontainers-1.19.3.jar;C:\Users\dhiebert\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\dhiebert\.m2\repository\org\hamcrest\hamcrest-core\2.2\hamcrest-core-2.2.jar;C:\Users\dhiebert\.m2\repository\org\apache\commons\commons-compress\1.24.0\commons-compress-1.24.0.jar;C:\Users\dhiebert\.m2\repository\org\rnorth\duct-tape\duct-tape\1.0.8\duct-tape-1.0.8.jar;C:\Users\dhiebert\.m2\repository\org\jetbrains\annotations\17.0.0\annotations-17.0.0.jar;C:\Users\dhiebert\.m2\repository\com\github\docker-java\docker-java-api\3.3.4\docker-java-api-3.3.4.jar;C:\Users\dhiebert\.m2\repository\com\github\docker-java\docker-java-transport-zerodep\3.3.4\docker-java-transport-zerodep-3.3.4.jar;C:\Users\dhiebert\.m2\repository\com\github\docker-java\docker-java-transport\3.3.4\docker-java-transport-3.3.4.jar;C:\Users\dhiebert\.m2\repository\net\java\dev\jna\jna\5.13.0\jna-5.13.0.jar;C:\Users\dhiebert\.m2\repository\org\apache\pdfbox\pdfbox\2.0.27\pdfbox-2.0.27.jar;C:\Users\dhiebert\.m2\repository\org\apache\pdfbox\fontbox\2.0.27\fontbox-2.0.27.jar;C:\Users\dhiebert\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\dhiebert\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.3\jackson-databind-2.15.3.jar;C:\Users\dhiebert\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.15.3\jackson-annotations-2.15.3.jar;C:\Users\dhiebert\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.3\jackson-core-2.15.3.jar;C:\Users\dhiebert\.m2\repository\org\apache\xmlgraphics\batik-all\1.16\batik-all-1.16.jar;C:\Users\dhiebert\.m2\repository\xml-apis\xml-apis\1.4.01\xml-apis-1.4.01.jar;C:\Users\dhiebert\.m2\repository\xml-apis\xml-apis-ext\1.3.04\xml-apis-ext-1.3.04.jar;C:\Users\dhiebert\.m2\repository\org\apache\xmlgraphics\xmlgraphics-commons\2.7\xmlgraphics-commons-2.7.jar;C:\Users\dhiebert\.m2\repository\commons-io\commons-io\1.3.1\commons-io-1.3.1.jar;C:\Users\dhiebert\.m2\repository\org\jgrapht\jgrapht-core\1.5.2\jgrapht-core-1.5.2.jar;C:\Users\dhiebert\.m2\repository\org\jheaps\jheaps\0.14\jheaps-0.14.jar;C:\Users\dhiebert\.m2\repository\org\apfloat\apfloat\1.10.1\apfloat-1.10.1.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\dhiebert"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2025-04-15"/>
    <property name="java.home" value="C:\Program Files\Eclipse Adoptium\jdk-21.0.7.6-hotspot"/>
    <property name="spring.profiles.active" value="test"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="C:\Users\dhiebert\Local Repositories\Project Management 2.0"/>
    <property name="java.vm.compressedOopsMode" value="32-bit"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="C:\Users\dhiebert\AppData\Local\Temp\surefire6716198026168578107\surefirebooter-20250617074719765_3.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="21.0.7+6-LTS"/>
    <property name="user.name" value="dhiebert"/>
    <property name="stdout.encoding" value="Cp1252"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="FILE_LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Temurin-21.0.7+6"/>
    <property name="LOG_FILE" value="logs/frc-project-management.log"/>
    <property name="localRepository" value="C:\Users\dhiebert\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/adoptium/adoptium-support/issues"/>
    <property name="java.io.tmpdir" value="C:\Users\dhiebert\AppData\Local\Temp\"/>
    <property name="java.version" value="21.0.7"/>
    <property name="user.dir" value="C:\Users\dhiebert\Local Repositories\Project Management 2.0"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="22524"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="LOGBACK_ROLLINGPOLICY_MAX_HISTORY" value="30"/>
    <property name="native.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Program Files\Eclipse Adoptium\jdk-21.0.7.6-hotspot\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Eclipse Adoptium\jdk-21.0.7.6-hotspot\bin;C:\Program Files\apache-maven-3.9.9\bin;C:\Program Files\Eclipse Adoptium\jdk-21.0.7.6-hotspot\bin;C:\Program Files\Eclipse Adoptium\jdk-21.0.7.6-hotspot\bin;C:\Program Files\National Instruments\Shared\OpenVINO\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files (x86)\Windows Live\Shared;C:\Program Files\Git\cmd;C:\Program Files\Common Files\Autodesk Shared\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\nodejs\;C:\Program Files\apache-maven-3.9.9\bin;%MAVEN_HOME%\bin;C:\Program Files\Eclipse Adoptium\jdk-21.0.7.6-hotspot\bin;C:\Users\dhiebert\AppData\Local\Microsoft\WindowsApps;C:\Users\dhiebert\AppData\Local\GitHubDesktop\bin;C:\Users\dhiebert\AppData\Roaming\npm;C:\Users\dhiebert\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\Scripts;C:\Users\dhiebert\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\maven;;c:\Users\Public\wpilib\2025\vscode\data\user-data\User\globalStorage\github.copilot-chat\debugCommand;c:\Users\Public\wpilib\2025\vscode\data\extensions\ms-python.debugpy-2025.4.1-win32-x64\bundled\scripts\noConfigScripts;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="Cp1252"/>
    <property name="java.vendor" value="Eclipse Adoptium"/>
    <property name="java.vm.version" value="21.0.7+6-LTS"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="65.0"/>
    <property name="CONSOLE_LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss} - %msg%n"/>
    <property name="LOGGED_APPLICATION_NAME" value="[frc-project-management] "/>
  </properties>
  <testcase name="testFindByFirstNameContainingIgnoreCase" classname="org.frcpm.repositories.TeamMemberRepositoryIntegrationTest" time="1.29">
    <failure message="&#10;Expected size: 2 but was: 1 in:&#10;[Team Leader]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 

Expected size: 2 but was: 1 in:
[Team Leader]
	at org.frcpm.repositories.TeamMemberRepositoryIntegrationTest.testFindByFirstNameContainingIgnoreCase(TeamMemberRepositoryIntegrationTest.java:291)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
]]></failure>
    <system-out><![CDATA[07:47:21.242 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [org.frcpm.repositories.TeamMemberRepositoryIntegrationTest]: TeamMemberRepositoryIntegrationTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
07:47:21.399 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration org.frcpm.FrcProjectManagementApplication for test class org.frcpm.repositories.TeamMemberRepositoryIntegrationTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.0)

Hibernate: drop table if exists attendances cascade 
Hibernate: drop table if exists components cascade 
Hibernate: drop table if exists meetings cascade 
Hibernate: drop table if exists milestones cascade 
Hibernate: drop table if exists projects cascade 
Hibernate: drop table if exists subsystems cascade 
Hibernate: drop table if exists subteams cascade 
Hibernate: drop table if exists task_assignments cascade 
Hibernate: drop table if exists task_components cascade 
Hibernate: drop table if exists task_dependencies cascade 
Hibernate: drop table if exists tasks cascade 
Hibernate: drop table if exists team_members cascade 
Hibernate: create table attendances (arrival_time time(6), departure_time time(6), present boolean not null, id bigint generated by default as identity, meeting_id bigint not null, member_id bigint not null, primary key (id), unique (meeting_id, member_id))
Hibernate: create table components (actual_delivery date, expected_delivery date, is_delivered boolean, id bigint generated by default as identity, part_number varchar(100), description TEXT, name varchar(255) not null, primary key (id))
Hibernate: create table meetings (date date not null, end_time time(6) not null, start_time time(6) not null, id bigint generated by default as identity, project_id bigint not null, notes TEXT, primary key (id))
Hibernate: create table milestones (date date not null, id bigint generated by default as identity, project_id bigint not null, description TEXT, name varchar(255) not null, primary key (id))
Hibernate: create table projects (goal_end_date date not null, hard_deadline date not null, start_date date not null, id bigint generated by default as identity, name varchar(100) not null, description TEXT, primary key (id))
Hibernate: create table subsystems (id bigint generated by default as identity, responsible_subteam_id bigint, name varchar(100) not null, description TEXT, status varchar(255) not null check (status in ('NOT_STARTED','IN_PROGRESS','COMPLETED','TESTING','ISSUES')), primary key (id))
Hibernate: create table subteams (color_code varchar(7) not null, id bigint generated by default as identity, name varchar(100) not null, specialties TEXT, primary key (id))
Hibernate: create table task_assignments (task_id bigint not null, team_member_id bigint not null, primary key (task_id, team_member_id))
Hibernate: create table task_components (component_id bigint not null, task_id bigint not null, primary key (component_id, task_id))
Hibernate: create table task_dependencies (dependency_id bigint not null, task_id bigint not null, primary key (dependency_id, task_id))
Hibernate: create table tasks (completed boolean not null, end_date date, progress integer not null, start_date date, actual_duration_seconds bigint, estimated_duration_seconds bigint not null, id bigint generated by default as identity, project_id bigint not null, subsystem_id bigint not null, description TEXT, priority varchar(255) not null check (priority in ('LOW','MEDIUM','HIGH','CRITICAL')), title varchar(255) not null, primary key (id))
Hibernate: create table team_members (is_leader boolean, id bigint generated by default as identity, subteam_id bigint, phone varchar(15), first_name varchar(150), last_name varchar(150), username varchar(150) not null unique, email varchar(254), skills TEXT, primary key (id))
Hibernate: alter table if exists attendances add constraint FK3i5ab1v2ad6wbm2rwhxbtm55u foreign key (meeting_id) references meetings
Hibernate: alter table if exists attendances add constraint FKb3g1rvha5qvyh1xik0bo6fghp foreign key (member_id) references team_members
Hibernate: alter table if exists meetings add constraint FKbt3vmcde0efob60esnfkyaeg0 foreign key (project_id) references projects
Hibernate: alter table if exists milestones add constraint FK2a7fp7wfu0qc1pq3wiifbksge foreign key (project_id) references projects
Hibernate: alter table if exists subsystems add constraint FK6w4rk9yygp8j1dhs91d0qt8vp foreign key (responsible_subteam_id) references subteams
Hibernate: alter table if exists task_assignments add constraint FKqyivind1lu4axk93y5m7vcx7i foreign key (team_member_id) references team_members
Hibernate: alter table if exists task_assignments add constraint FKk36vhf9tt6t3woselwnkis6v6 foreign key (task_id) references tasks
Hibernate: alter table if exists task_components add constraint FK5irpaispcx79xwy6n1qomaxnv foreign key (component_id) references components
Hibernate: alter table if exists task_components add constraint FKjvcgnyl1ttc41nv55hjvnnft1 foreign key (task_id) references tasks
Hibernate: alter table if exists task_dependencies add constraint FKnwfxktx9emcwsylqofad5cxbx foreign key (dependency_id) references tasks
Hibernate: alter table if exists task_dependencies add constraint FKerlktvi2bud6uauih348u0loj foreign key (task_id) references tasks
Hibernate: alter table if exists tasks add constraint FKsfhn82y57i3k9uxww1s007acc foreign key (project_id) references projects
Hibernate: alter table if exists tasks add constraint FK3tj2dchxxvxu2te3uwgjakx76 foreign key (subsystem_id) references subsystems
Hibernate: alter table if exists team_members add constraint FKnjkvjfudwwytv2aiuha5wyvqx foreign key (subteam_id) references subteams
Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
Hibernate: select tm1_0.id,tm1_0.email,tm1_0.first_name,tm1_0.last_name,tm1_0.is_leader,tm1_0.phone,tm1_0.skills,tm1_0.subteam_id,tm1_0.username from team_members tm1_0 where upper(tm1_0.first_name) like upper(?) escape '\'
]]></system-out>
    <system-err><![CDATA[WARNING: A Java agent has been loaded dynamically (C:\Users\dhiebert\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.10\byte-buddy-agent-1.14.10.jar)
WARNING: If a serviceability tool is in use, please run with -XX:+EnableDynamicAgentLoading to hide this warning
WARNING: If a serviceability tool is not in use, please run with -Djdk.instrument.traceUsage for more information
WARNING: Dynamic loading of agents will be disallowed by default in a future release
]]></system-err>
  </testcase>
  <testcase name="testFullNameGeneration" classname="org.frcpm.repositories.TeamMemberRepositoryIntegrationTest" time="0.015">
    <system-out><![CDATA[Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
]]></system-out>
  </testcase>
  <testcase name="testFindAll" classname="org.frcpm.repositories.TeamMemberRepositoryIntegrationTest" time="0.014">
    <system-out><![CDATA[Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
Hibernate: select tm1_0.id,tm1_0.email,tm1_0.first_name,tm1_0.last_name,tm1_0.is_leader,tm1_0.phone,tm1_0.skills,tm1_0.subteam_id,tm1_0.username from team_members tm1_0
]]></system-out>
  </testcase>
  <testcase name="testCount" classname="org.frcpm.repositories.TeamMemberRepositoryIntegrationTest" time="0.032">
    <system-out><![CDATA[Hibernate: select count(*) from team_members tm1_0
Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
Hibernate: select count(*) from team_members tm1_0
]]></system-out>
  </testcase>
  <testcase name="testFindByName" classname="org.frcpm.repositories.TeamMemberRepositoryIntegrationTest" time="0.021">
    <system-out><![CDATA[Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
Hibernate: select tm1_0.id,tm1_0.email,tm1_0.first_name,tm1_0.last_name,tm1_0.is_leader,tm1_0.phone,tm1_0.skills,tm1_0.subteam_id,tm1_0.username from team_members tm1_0 where lower((tm1_0.first_name||' '||tm1_0.last_name)) like lower(('%'||?||'%')) escape ''
Hibernate: select tm1_0.id,tm1_0.email,tm1_0.first_name,tm1_0.last_name,tm1_0.is_leader,tm1_0.phone,tm1_0.skills,tm1_0.subteam_id,tm1_0.username from team_members tm1_0 where lower((tm1_0.first_name||' '||tm1_0.last_name)) like lower(('%'||?||'%')) escape ''
]]></system-out>
  </testcase>
  <testcase name="testFindByEmail_NotFound" classname="org.frcpm.repositories.TeamMemberRepositoryIntegrationTest" time="0.018">
    <system-out><![CDATA[Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
Hibernate: select tm1_0.id,tm1_0.email,tm1_0.first_name,tm1_0.last_name,tm1_0.is_leader,tm1_0.phone,tm1_0.skills,tm1_0.subteam_id,tm1_0.username from team_members tm1_0 where tm1_0.email=?
]]></system-out>
  </testcase>
  <testcase name="testCountByLeaderTrue" classname="org.frcpm.repositories.TeamMemberRepositoryIntegrationTest" time="0.015">
    <system-out><![CDATA[Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
Hibernate: select count(tm1_0.id) from team_members tm1_0 where tm1_0.is_leader
]]></system-out>
  </testcase>
  <testcase name="testFindByLeaderTrue" classname="org.frcpm.repositories.TeamMemberRepositoryIntegrationTest" time="0.014">
    <system-out><![CDATA[Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
Hibernate: select tm1_0.id,tm1_0.email,tm1_0.first_name,tm1_0.last_name,tm1_0.is_leader,tm1_0.phone,tm1_0.skills,tm1_0.subteam_id,tm1_0.username from team_members tm1_0 where tm1_0.is_leader
]]></system-out>
  </testcase>
  <testcase name="testCountBySubteam" classname="org.frcpm.repositories.TeamMemberRepositoryIntegrationTest" time="0.029">
    <system-out><![CDATA[Hibernate: insert into subteams (color_code,name,specialties,id) values (?,?,?,default)
Hibernate: insert into subteams (color_code,name,specialties,id) values (?,?,?,default)
Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
Hibernate: select count(tm1_0.id) from team_members tm1_0 where tm1_0.subteam_id=?
Hibernate: select count(tm1_0.id) from team_members tm1_0 where tm1_0.subteam_id=?
]]></system-out>
  </testcase>
  <testcase name="testUniqueConstraint_Username" classname="org.frcpm.repositories.TeamMemberRepositoryIntegrationTest" time="0.022">
    <error message="could not execute statement [Unique index or primary key violation: &quot;PUBLIC.CONSTRAINT_INDEX_37 ON PUBLIC.TEAM_MEMBERS(USERNAME NULLS FIRST) VALUES ( /* 19 */ &apos;testuser&apos; )&quot;; SQL statement:&#10;insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default) [23505-224]] [insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)]; SQL [insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)]; constraint [&quot;PUBLIC.CONSTRAINT_INDEX_37 ON PUBLIC.TEAM_MEMBERS(USERNAME NULLS FIRST) VALUES ( /* 19 */ &apos;testuser&apos; )&quot;; SQL statement:&#10;insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default) [23505-224]]" type="org.springframework.dao.DataIntegrityViolationException"><![CDATA[org.springframework.dao.DataIntegrityViolationException: 
could not execute statement [Unique index or primary key violation: "PUBLIC.CONSTRAINT_INDEX_37 ON PUBLIC.TEAM_MEMBERS(USERNAME NULLS FIRST) VALUES ( /* 19 */ 'testuser' )"; SQL statement:
insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default) [23505-224]] [insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)]; SQL [insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)]; constraint ["PUBLIC.CONSTRAINT_INDEX_37 ON PUBLIC.TEAM_MEMBERS(USERNAME NULLS FIRST) VALUES ( /* 19 */ 'testuser' )"; SQL statement:
insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default) [23505-224]]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:290)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:249)
	at jdk.proxy2/jdk.proxy2.$Proxy126.save(Unknown Source)
	at org.frcpm.repositories.TeamMemberRepositoryIntegrationTest.testUniqueConstraint_Username(TeamMemberRepositoryIntegrationTest.java:534)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement [Unique index or primary key violation: "PUBLIC.CONSTRAINT_INDEX_37 ON PUBLIC.TEAM_MEMBERS(USERNAME NULLS FIRST) VALUES ( /* 19 */ 'testuser' )"; SQL statement:
insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default) [23505-224]] [insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)]
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:62)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:283)
	at org.hibernate.id.insert.GetGeneratedKeysDelegate.performInsert(GetGeneratedKeysDelegate.java:107)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorPostInsertSingleTable.execute(MutationExecutorPostInsertSingleTable.java:100)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:171)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:112)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2860)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:81)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:667)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:290)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:271)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:321)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:386)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:300)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:219)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:766)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:750)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy112.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 11 more
Caused by: org.h2.jdbc.JdbcSQLIntegrityConstraintViolationException: Unique index or primary key violation: "PUBLIC.CONSTRAINT_INDEX_37 ON PUBLIC.TEAM_MEMBERS(USERNAME NULLS FIRST) VALUES ( /* 19 */ 'testuser' )"; SQL statement:
insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default) [23505-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:520)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.index.Index.getDuplicateKeyException(Index.java:527)
	at org.h2.mvstore.db.MVSecondaryIndex.checkUnique(MVSecondaryIndex.java:223)
	at org.h2.mvstore.db.MVSecondaryIndex.add(MVSecondaryIndex.java:184)
	at org.h2.mvstore.db.MVTable.addRow(MVTable.java:519)
	at org.h2.command.dml.Insert.insertRows(Insert.java:174)
	at org.h2.command.dml.Insert.update(Insert.java:135)
	at org.h2.command.CommandContainer.executeUpdateWithGeneratedKeys(CommandContainer.java:242)
	at org.h2.command.CommandContainer.update(CommandContainer.java:163)
	at org.h2.command.Command.executeUpdate(Command.java:256)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:216)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:174)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:280)
	... 57 more
]]></error>
    <system-out><![CDATA[Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
2025-06-17 07:47:27 - Unique index or primary key violation: "PUBLIC.CONSTRAINT_INDEX_37 ON PUBLIC.TEAM_MEMBERS(USERNAME NULLS FIRST) VALUES ( /* 19 */ 'testuser' )"; SQL statement:
insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default) [23505-224]
]]></system-out>
  </testcase>
  <testcase name="testFindBySkillsContainingIgnoreCase" classname="org.frcpm.repositories.TeamMemberRepositoryIntegrationTest" time="0.028">
    <system-out><![CDATA[Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
Hibernate: select distinct tm1_0.id,tm1_0.email,tm1_0.first_name,tm1_0.last_name,tm1_0.is_leader,tm1_0.phone,tm1_0.skills,tm1_0.subteam_id,tm1_0.username from team_members tm1_0 where exists(select 1 from team_members tm2_0 where tm2_0.id=tm1_0.id and (lower(tm2_0.skills) like lower(('%'||?||'%')) escape ''))
]]></system-out>
  </testcase>
  <testcase name="testFindBySkillsContainingIgnoreCase_NoMatch" classname="org.frcpm.repositories.TeamMemberRepositoryIntegrationTest" time="0.009">
    <system-out><![CDATA[Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
Hibernate: select distinct tm1_0.id,tm1_0.email,tm1_0.first_name,tm1_0.last_name,tm1_0.is_leader,tm1_0.phone,tm1_0.skills,tm1_0.subteam_id,tm1_0.username from team_members tm1_0 where exists(select 1 from team_members tm2_0 where tm2_0.id=tm1_0.id and (lower(tm2_0.skills) like lower(('%'||?||'%')) escape ''))
]]></system-out>
  </testcase>
  <testcase name="testFindByUsername" classname="org.frcpm.repositories.TeamMemberRepositoryIntegrationTest" time="0.014">
    <system-out><![CDATA[Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
Hibernate: select tm1_0.id,tm1_0.email,tm1_0.first_name,tm1_0.last_name,tm1_0.is_leader,tm1_0.phone,tm1_0.skills,tm1_0.subteam_id,tm1_0.username from team_members tm1_0 where tm1_0.username=?
]]></system-out>
  </testcase>
  <testcase name="testFindLeaders" classname="org.frcpm.repositories.TeamMemberRepositoryIntegrationTest" time="0.013">
    <system-out><![CDATA[Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
Hibernate: select tm1_0.id,tm1_0.email,tm1_0.first_name,tm1_0.last_name,tm1_0.is_leader,tm1_0.phone,tm1_0.skills,tm1_0.subteam_id,tm1_0.username from team_members tm1_0 where tm1_0.is_leader=true
]]></system-out>
  </testcase>
  <testcase name="testFindByLeaderFalse" classname="org.frcpm.repositories.TeamMemberRepositoryIntegrationTest" time="0.023">
    <system-out><![CDATA[Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
Hibernate: select tm1_0.id,tm1_0.email,tm1_0.first_name,tm1_0.last_name,tm1_0.is_leader,tm1_0.phone,tm1_0.skills,tm1_0.subteam_id,tm1_0.username from team_members tm1_0 where not(tm1_0.is_leader)
]]></system-out>
  </testcase>
  <testcase name="testLeadershipStatusManagement" classname="org.frcpm.repositories.TeamMemberRepositoryIntegrationTest" time="0.067">
    <system-out><![CDATA[Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
Hibernate: select tm1_0.id,tm1_0.email,tm1_0.first_name,tm1_0.last_name,tm1_0.is_leader,tm1_0.phone,tm1_0.skills,tm1_0.subteam_id,tm1_0.username from team_members tm1_0 where tm1_0.is_leader
Hibernate: update team_members set email=?,first_name=?,last_name=?,is_leader=?,phone=?,skills=?,subteam_id=?,username=? where id=?
Hibernate: select tm1_0.id,tm1_0.email,tm1_0.first_name,tm1_0.last_name,tm1_0.is_leader,tm1_0.phone,tm1_0.skills,tm1_0.subteam_id,tm1_0.username from team_members tm1_0 where tm1_0.is_leader
]]></system-out>
  </testcase>
  <testcase name="testSkillsManagement" classname="org.frcpm.repositories.TeamMemberRepositoryIntegrationTest" time="0.021">
    <system-out><![CDATA[Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
Hibernate: update team_members set email=?,first_name=?,last_name=?,is_leader=?,phone=?,skills=?,subteam_id=?,username=? where id=?
Hibernate: select distinct tm1_0.id,tm1_0.email,tm1_0.first_name,tm1_0.last_name,tm1_0.is_leader,tm1_0.phone,tm1_0.skills,tm1_0.subteam_id,tm1_0.username from team_members tm1_0 where exists(select 1 from team_members tm2_0 where tm2_0.id=tm1_0.id and (lower(tm2_0.skills) like lower(('%'||?||'%')) escape ''))
]]></system-out>
  </testcase>
  <testcase name="testFindByUsernameOrEmail_NotFound" classname="org.frcpm.repositories.TeamMemberRepositoryIntegrationTest" time="0.01">
    <system-out><![CDATA[Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
Hibernate: select tm1_0.id,tm1_0.email,tm1_0.first_name,tm1_0.last_name,tm1_0.is_leader,tm1_0.phone,tm1_0.skills,tm1_0.subteam_id,tm1_0.username from team_members tm1_0 where tm1_0.username=? or tm1_0.email=?
]]></system-out>
  </testcase>
  <testcase name="testFindByEmail" classname="org.frcpm.repositories.TeamMemberRepositoryIntegrationTest" time="0.008">
    <system-out><![CDATA[Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
Hibernate: select tm1_0.id,tm1_0.email,tm1_0.first_name,tm1_0.last_name,tm1_0.is_leader,tm1_0.phone,tm1_0.skills,tm1_0.subteam_id,tm1_0.username from team_members tm1_0 where tm1_0.email=?
]]></system-out>
  </testcase>
  <testcase name="testSubteamAssignmentChange" classname="org.frcpm.repositories.TeamMemberRepositoryIntegrationTest" time="0.012">
    <system-out><![CDATA[Hibernate: insert into subteams (color_code,name,specialties,id) values (?,?,?,default)
Hibernate: insert into subteams (color_code,name,specialties,id) values (?,?,?,default)
Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
Hibernate: update team_members set email=?,first_name=?,last_name=?,is_leader=?,phone=?,skills=?,subteam_id=?,username=? where id=?
Hibernate: select count(tm1_0.id) from team_members tm1_0 where tm1_0.subteam_id=?
Hibernate: select count(tm1_0.id) from team_members tm1_0 where tm1_0.subteam_id=?
]]></system-out>
  </testcase>
  <testcase name="testFindByUsernameOrEmail" classname="org.frcpm.repositories.TeamMemberRepositoryIntegrationTest" time="0.013">
    <system-out><![CDATA[Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
Hibernate: select tm1_0.id,tm1_0.email,tm1_0.first_name,tm1_0.last_name,tm1_0.is_leader,tm1_0.phone,tm1_0.skills,tm1_0.subteam_id,tm1_0.username from team_members tm1_0 where tm1_0.username=? or tm1_0.email=?
Hibernate: select tm1_0.id,tm1_0.email,tm1_0.first_name,tm1_0.last_name,tm1_0.is_leader,tm1_0.phone,tm1_0.skills,tm1_0.subteam_id,tm1_0.username from team_members tm1_0 where tm1_0.username=? or tm1_0.email=?
]]></system-out>
  </testcase>
  <testcase name="testDeleteById" classname="org.frcpm.repositories.TeamMemberRepositoryIntegrationTest" time="0.036">
    <system-out><![CDATA[Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
Hibernate: select count(*) from team_members tm1_0 where tm1_0.id=?
Hibernate: delete from team_members where id=?
Hibernate: select count(*) from team_members tm1_0 where tm1_0.id=?
Hibernate: select tm1_0.id,tm1_0.email,tm1_0.first_name,tm1_0.last_name,tm1_0.is_leader,tm1_0.phone,tm1_0.skills,tm1_0.subteam_id,tm1_0.username from team_members tm1_0 where tm1_0.id=?
]]></system-out>
  </testcase>
  <testcase name="testFindByUsername_NotFound" classname="org.frcpm.repositories.TeamMemberRepositoryIntegrationTest" time="0.009">
    <system-out><![CDATA[Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
Hibernate: select tm1_0.id,tm1_0.email,tm1_0.first_name,tm1_0.last_name,tm1_0.is_leader,tm1_0.phone,tm1_0.skills,tm1_0.subteam_id,tm1_0.username from team_members tm1_0 where tm1_0.username=?
]]></system-out>
  </testcase>
  <testcase name="testFindBySubteamIsNull" classname="org.frcpm.repositories.TeamMemberRepositoryIntegrationTest" time="0.013">
    <system-out><![CDATA[Hibernate: insert into subteams (color_code,name,specialties,id) values (?,?,?,default)
Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
Hibernate: select tm1_0.id,tm1_0.email,tm1_0.first_name,tm1_0.last_name,tm1_0.is_leader,tm1_0.phone,tm1_0.skills,tm1_0.subteam_id,tm1_0.username from team_members tm1_0 where tm1_0.subteam_id is null
]]></system-out>
  </testcase>
  <testcase name="testFindBySubteam" classname="org.frcpm.repositories.TeamMemberRepositoryIntegrationTest" time="0.014">
    <system-out><![CDATA[Hibernate: insert into subteams (color_code,name,specialties,id) values (?,?,?,default)
Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
Hibernate: select tm1_0.id,tm1_0.email,tm1_0.first_name,tm1_0.last_name,tm1_0.is_leader,tm1_0.phone,tm1_0.skills,tm1_0.subteam_id,tm1_0.username from team_members tm1_0 where tm1_0.subteam_id=?
]]></system-out>
  </testcase>
  <testcase name="testFindBySubteamId" classname="org.frcpm.repositories.TeamMemberRepositoryIntegrationTest" time="0.009">
    <system-out><![CDATA[Hibernate: insert into subteams (color_code,name,specialties,id) values (?,?,?,default)
Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
Hibernate: select tm1_0.id,tm1_0.email,tm1_0.first_name,tm1_0.last_name,tm1_0.is_leader,tm1_0.phone,tm1_0.skills,tm1_0.subteam_id,tm1_0.username from team_members tm1_0 where tm1_0.subteam_id=?
]]></system-out>
  </testcase>
  <testcase name="testRemoveSubteamAssignment" classname="org.frcpm.repositories.TeamMemberRepositoryIntegrationTest" time="0.01">
    <system-out><![CDATA[Hibernate: insert into subteams (color_code,name,specialties,id) values (?,?,?,default)
Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
Hibernate: update team_members set email=?,first_name=?,last_name=?,is_leader=?,phone=?,skills=?,subteam_id=?,username=? where id=?
Hibernate: select tm1_0.id,tm1_0.email,tm1_0.first_name,tm1_0.last_name,tm1_0.is_leader,tm1_0.phone,tm1_0.skills,tm1_0.subteam_id,tm1_0.username from team_members tm1_0 where tm1_0.subteam_id is null
]]></system-out>
  </testcase>
  <testcase name="testFindByLastNameContainingIgnoreCase" classname="org.frcpm.repositories.TeamMemberRepositoryIntegrationTest" time="0.009">
    <system-out><![CDATA[Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
Hibernate: select tm1_0.id,tm1_0.email,tm1_0.first_name,tm1_0.last_name,tm1_0.is_leader,tm1_0.phone,tm1_0.skills,tm1_0.subteam_id,tm1_0.username from team_members tm1_0 where upper(tm1_0.last_name) like upper(?) escape '\'
]]></system-out>
  </testcase>
  <testcase name="testSaveAndFindById" classname="org.frcpm.repositories.TeamMemberRepositoryIntegrationTest" time="0.01">
    <system-out><![CDATA[Hibernate: insert into subteams (color_code,name,specialties,id) values (?,?,?,default)
Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
]]></system-out>
  </testcase>
  <testcase name="testSubteamRelationship" classname="org.frcpm.repositories.TeamMemberRepositoryIntegrationTest" time="0.014">
    <system-out><![CDATA[Hibernate: insert into subteams (color_code,name,specialties,id) values (?,?,?,default)
Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
Hibernate: insert into team_members (email,first_name,last_name,is_leader,phone,skills,subteam_id,username,id) values (?,?,?,?,?,?,?,?,default)
Hibernate: select tm1_0.id,tm1_0.email,tm1_0.first_name,tm1_0.last_name,tm1_0.is_leader,tm1_0.phone,tm1_0.skills,tm1_0.subteam_id,tm1_0.username from team_members tm1_0 where tm1_0.subteam_id=?
]]></system-out>
  </testcase>
</testsuite>